/* Stili per desktop */
body {
    font-family: Arial, sans-serif;
    background-color: #222;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    margin: 20px;
    padding: 0;
    box-sizing: border-box;
}

.character-grid {
    display: grid;
    grid-template-columns: 1fr; /* Singola colonna per ogni riga */
    gap: 20px; /* Spazio tra le due righe */
    width: 100%;
    overflow: hidden;
}

/* Configurazione per le righe maschili e femminili */
.maleCharacter, .femaleCharacter {
    display: flex;
    gap: 10px;
    overflow-x: auto; /* Abilita lo scorrimento orizzontale */
    padding: 10px 0;
    white-space: nowrap; /* Impedisce ai personaggi di andare a capo */
}

.character {
    position: relative;
    flex: 0 0 auto; /* Impedisce ai personaggi di ridimensionarsi */
    cursor: pointer;
    border: 3px solid transparent;
    border-radius: 10px;
    transition: border 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
    overflow: hidden;
}

.character img {
    width: 100%;
    border-radius: 10px;
    display: block;
    transition: transform 0.3s ease;
}

.character.selected {
    border: 3px solid gold;
    /* Bordo dorato per il personaggio selezionato */
    transform: scale(1.1);
    /* Aumenta leggermente la dimensione */
    box-shadow: 0 0 15px rgba(255, 215, 0, 0.5);
    /* Ombra dorata */
}

.grid-container {
    margin-bottom: 40px;
    max-height: 400px;
    max-width: 1200px;
    padding: 0 10px;
}

.maleCharacter,
.femaleCharacter {
    display: flex;
    overflow-x: auto;
    /* Abilita lo scorrimento orizzontale */
}

/* Pulsante di conferma */
.confirm-button {
    padding: 12px 25px;
    background-color: gold;
    border: none;
    border-radius: 5px;
    font-size: 18px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.confirm-button:hover {
    background-color: #FFD700;
    /* Colore leggermente pi√π scuro al passaggio del mouse */
    transform: translateY(-2px);
    /* Effetto di sollevamento */
}

/* Stili per dispositivi mobili */
@media screen and (max-width: 768px) {
    body {
        margin: 0;
        padding: 10px;
    }

    .character-grid {
        gap: 15px;
    }

    .grid-container {
        max-height: 300px;
        max-width: 90%;
        padding: 0;
    }
    
    .maleCharacter, .femaleCharacter {
        grid-template-columns: 1fr; /* Singola colonna per ogni riga */
        display: flex;
        flex-direction: row;
    }
}

@media screen and (max-width: 500px) {
    .character-grid {
        gap: 10px;
        margin: 10px 0;
        width: 100%;
        max-width: 100%;
        overflow: hidden;

    }

    .character {
        border: 2px solid transparent;
    }

    .maleCharacter, .femaleCharacter {
        grid-template-columns: 1fr; /* Singola colonna per ogni riga */
        display: flex;
        flex-direction: row;
    }

    .character.selected {
        border: 2px solid gold;
        transform: scale(1.05);
    }

    .grid-container {
        max-height: 250px;
        max-width: 100%;
        padding: 0;
    }

    .confirm-button {
        padding: 10px 20px;
        font-size: 16px;
    }
}

@mixin sp-layout {
    @media screen and (max-width: 750px) {
      @content;
    }
  }
  
  body {
     background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
  }
  
  @function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
  }
  
  .stars {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 120%;
    transform: rotate(-45deg);
    z-index: -10;
  }
  
  .star {
    $star-count: 50;
    --star-color: var(--primary-color);
    --star-tail-length: 6em;
    --star-tail-height: 2px;
    --star-width: calc(var(--star-tail-length) / 6);
    --fall-duration: 9s;
    --tail-fade-duration: var(--fall-duration);
  
    position: absolute;
    top: var(--top-offset);
    left: 0;
    width: var(--star-tail-length);
    height: var(--star-tail-height);
    color: var(--star-color);
    background: linear-gradient(45deg, currentColor, transparent);
    border-radius: 50%;
    filter: drop-shadow(0 0 6px currentColor);
    transform: translate3d(104em, 0, 0);
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
    
    @include sp-layout {
      // For mobile performance, tail-fade animation will be removed QAQ
      animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
    }
  
    @for $i from 1 through $star-count {
      &:nth-child(#{$i}) {
        --star-tail-length: #{random_range(500em, 750em) / 100};
        --top-offset: #{random_range(0vh, 10000vh) / 100};
        --fall-duration: #{random_range(6000, 12000s) / 1000};
        --fall-delay: #{random_range(0, 10000s) / 1000};
      }
    }
  
    &::before, &::after {
      position: absolute;
      content: '';
      top: 0;
      left: calc(var(--star-width) / -2);
      width: var(--star-width);
      height: 100%;
      background: linear-gradient(45deg, transparent, currentColor, transparent);
      border-radius: inherit;
      animation: blink 2s linear infinite;
    }
  
    &::before {
      transform: rotate(45deg);
    }
  
    &::after {
      transform: rotate(-45deg);
    }
  }
  
  @keyframes fall {
    to {
      transform: translate3d(-30em, 0, 0);
    }
  }
  
  @keyframes tail-fade {
    0%, 50% {
      width: var(--star-tail-length);
      opacity: 1;
    }
  
    70%, 80% {
      width: 0;
      opacity: 0.4;
    }
  
    100% {
      width: 0;
      opacity: 0;
    }
  }
  
  @keyframes blink {
    50% {
      opacity: 0.6;
    }
  }